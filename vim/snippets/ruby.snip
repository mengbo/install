snippet     #!
    #!/usr/bin/env ruby

snippet     case
abbr        case when end
    case ${1:object}
    when ${2:condition}
        ${3}
    end

snippet     when
    when ${1:condition}
        ${2}

snippet     unless
abbr        unless end
    unless ${1:condition}
        ${2}
    end

snippet     while
abbr        while end
    while ${1:condition}
        ${2}
    end

snippet     until
abbr        until end
    until ${1:condition}
        ${2}
    end

snippet     for
abbr        for end
    for ${1:condition}
        ${2}
    end

snippet     cla
abbr        class end
    class ${1:ClassName}
        ${2}
    end

snippet     clai
abbr        class initialize end
    class ${1:ClassName}
        def initialize(${2:args})
            ${3}
        end
    end

snippet     clap
abbr        class < ParentClass end
    class ${1:ClassName} < ${2:ParentClass}
        def initialize(${3:args})
            ${4}
        end
    end

snippet     clapi
abbr        class < ParentClass initialize end
    class ${1:ClassName} < ${2:ParentClass}
        def initialize(${3:args})
            ${4}
        end
    end

snippet     ea
abbr        each { }
    each { |${1:e}| ${2} }

snippet     ead
abbr        each do end
    each do |${1:e}|
        ${2}
    end 

snippet     mod
abbr        module end
    module ${1:ModuleNmae}
        ${2}
    end
